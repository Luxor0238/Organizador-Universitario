//#############################################################################################################################################
//#############################################################################################################################################
//#############################################################################################################################################
#ifndef MATERIAS_H
#define MATERIAS_H
//#############################################################################################################################################
//#############################################################################################################################################
//Estructuras##################################################################################################################################
typedef struct
{

	int Codigo_De_Materia;
	char Nombre_De_Materia[50];
	int Materias_Correlativas[100];

}STR_Materias; //Estructura para un listado de las Materias de la carrera
//#############################################################################################################################################
typedef struct
{

	int Codigo_De_Materia;
	char Nombre_De_Materia[50];
	char Condicion[12];
	int Cantidad_De_Recursadas;
	char Disponibilidad[14];
	int Nota;

}STR_Estado_Carrera;
//#############################################################################################################################################
//#############################################################################################################################################
//Prototipos###################################################################################################################################
void Pasar_Materias_CSV_a_BIN(FILE *, FILE *); //Transforma el archivo Materias.csv a Materias.bin
void Cargar_Archivo_Progreso_Desde_Cero(FILE *, FILE *, FILE *); //Carga la lista del progreso actual de la carrera
//#############################################################################################################################################
void Mostrar_Materias(FILE *); //Muestra todas las materias de la carrera
void Mostrar_Estado_Carrera(FILE *); //Muestra el estado actual de la carrera
void Mostrar_Materia_Seleccionada(FILE *, int); //Muestra la materia seleccionada por el usuario
//#############################################################################################################################################
void Actualizar_Disponibilidad(FILE *, FILE *); //Actualiza la disponibilidad de las materias
//#############################################################################################################################################
void Modificar_Condicion(FILE *, int); //Modifica la Condicion de la materia seleccionada
void Modificar_Recursadas(FILE *, int); //Modifica la Cantidad de Recursadas de la materia seleccionada
void Modificar_Nota(FILE *, int); //Modifica la Nota de la materia seleccionada
void Cambiar_Estado_Materias(FILE *, FILE *, int, int, FILE *); //Cambia el estado actual de una materia
//#############################################################################################################################################
int Buscar_Materia_Estado_Carrera(FILE *, int); //Busca una materia por codigo y devuelve la posicion en bytes del registro
int Buscar_Materia(FILE *, int); //Busca una materia por codigo y devuelve la posicion en bytes del registro
//#############################################################################################################################################
int Verificar_Disponibilidad(FILE *, int); //Verifica si la materia ingresada esta habilitada
//#############################################################################################################################################
//#############################################################################################################################################
//#############################################################################################################################################
#endif
//#############################################################################################################################################
//#############################################################################################################################################
//#############################################################################################################################################